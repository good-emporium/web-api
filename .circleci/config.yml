version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.6-stretch-node-browsers

persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: .
    paths:
      - .

attach_workspace: &attach_workspace
  attach_workspace:
    at: .

restore_node_cache: &restore_node_cache
  restore_cache:
    key: node-cache-{{ checksum "package-lock.json" }}

save_node_cache: &save_node_cache
  save_cache:
    key: node-cache-{{ checksum "package-lock.json" }}
    paths:
      - node_modules

install_node_dependencies: &install_node_dependencies
  run:
    name: Installing Serverless & Node dependencies
    command: |
      sudo npm install -g serverless
      npm install

run_tests: &run_tests
  run:
    name: Testing all the things
    command: |
      wget http://dynamodb-local.s3-website-us-west-2.amazonaws.com/dynamodb_local_latest.tar.gz -q -O - | tar -xz
      nohup java -jar DynamoDBLocal.jar &
      sleep 15
      pytest

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - *persist_to_workspace

  test:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Installing the Python dependencies
          command: sudo pip install -r requirements.dev.txt
      - *run_tests

  deploy_staging:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_node_cache
      - *install_node_dependencies
      - *save_node_cache
      - run:
          name: Deploy to the staging environment
          command: serverless deploy --verbose --stage v0-dev --jwt_secret ${DEV_JWT_SECRET}

  deploy_prod:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_node_cache
      - *install_node_dependencies
      - *save_node_cache
      - run:
          name: Deploy to the prod environment
          command: serverless deploy --verbose --stage v0 --jwt_secret ${PROD_JWT_SECRET} --env p

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - test:
          requires:
            - build
          filters:
            branches:
              ignore: master
            tags:
              ignore: /^v.*/

      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              ignore: /^v.*/

      - deploy_prod:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
